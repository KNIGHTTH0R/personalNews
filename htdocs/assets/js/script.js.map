{"version":3,"sources":["script.js"],"names":["document","addEventListener","stickyElement","stickyId","compensateId","getElementById","classList","add","scrollElement","style","marginTop","clientHeight","themeSwitch","elementId","switchingElement","onclick","this","checked","getElementsByTagName","themeDark","remove","themeLight","localStorage","setItem","console","log","savedLocalStorageTheme","getItem"],"mappings":"AAGAA,SAASC,iBAAiB,mBAAoB,WAS7C,QAASC,GAAcC,EAASC,GAC/BF,EAAgBF,SAASK,eAAeF,GACxCD,EAAcI,UAAUC,IAAI,UAG5BC,cAAgBR,SAASK,eAAeD,GACxCI,cAAcC,MAAMC,UAAYR,EAAcS,aAAe,KAI9D,QAASC,GAAYC,GACpBC,iBAAmBd,SAASK,eAAeQ,GAC3CC,iBAAiBC,QAAU,WACtBC,KAAKC,SACRjB,SAASkB,qBAAqB,QAAQ,GAAGZ,UAAUC,IAAIY,GACvDnB,SAASkB,qBAAqB,QAAQ,GAAGZ,UAAUc,OAAOC,GAC1DC,aAAaC,QAAQ,QAASJ,GAC9BK,QAAQC,IAAI,0BAA4BN,KAExCnB,SAASkB,qBAAqB,QAAQ,GAAGZ,UAAUC,IAAIc,GACvDrB,SAASkB,qBAAqB,QAAQ,GAAGZ,UAAUc,OAAOD,GAC1DG,aAAaC,QAAQ,QAASF,GAC9BG,QAAQC,IAAI,0BAA4BJ,KA7B3C,GAAIA,GAAa,QACbF,EAAY,MAGhBnB,UAASkB,qBAAqB,QAAQ,GAAGZ,UAAUC,IAAI,KA+BvD,IAAImB,GAAyBJ,aAAaK,QAAQ,QAClDH,SAAQC,IAAIC,GACkB,OAA3BA,IACF1B,SAASkB,qBAAqB,QAAQ,GAAGZ,UAAUc,OAAOC,EAAYF,GACtEnB,SAASkB,qBAAqB,QAAQ,GAAGZ,UAAUC,IAAImB,GACpDA,IAA2BL,IAC7BrB,SAASK,eAAe,kBAAkBY,SAAU,GAElDS,IAA2BP,IAC7BnB,SAASK,eAAe,kBAAkBY,SAAU,IAMtDf,EAAc,mBAAmB,WAGjCU,EAAY","file":"script.js","sourcesContent":["// TODO: use data-target instead of elementIndex\n\n// is the DOM ready for manipulation?\ndocument.addEventListener('DOMContentLoaded', function() {\n\n\tvar themeLight = 'light';\n\tvar themeDark = 'dark';\n\n\t// add JS to body-tag to allow CSS-Manipulation if JS is available\n\tdocument.getElementsByTagName('body')[0].classList.add('js');\n\n\t// make element sticky (via position in css)\n\tfunction stickyElement(stickyId,compensateId) {\n\t\tstickyElement = document.getElementById(stickyId);\n\t\tstickyElement.classList.add('sticky');\n\n\t\t//add Element-Height as margin-top to desired element\n\t\tscrollElement = document.getElementById(compensateId);\n\t\tscrollElement.style.marginTop = stickyElement.clientHeight + 'px';\n\t}\n\n\t// switch theme by adding and removing classes to body\n\tfunction themeSwitch(elementId) {\n\t\tswitchingElement = document.getElementById(elementId);\n\t\tswitchingElement.onclick = function() {\n\t\t\tif (this.checked) {\n\t\t\t\tdocument.getElementsByTagName('body')[0].classList.add(themeDark);\n\t\t\t\tdocument.getElementsByTagName('body')[0].classList.remove(themeLight);\n\t\t\t\tlocalStorage.setItem('theme', themeDark);\n\t\t\t\tconsole.log('localStorage Theme is: ' + themeDark);\n\t\t\t} else {\n\t\t\t\tdocument.getElementsByTagName('body')[0].classList.add(themeLight);\n\t\t\t\tdocument.getElementsByTagName('body')[0].classList.remove(themeDark);\n\t\t\t\tlocalStorage.setItem('theme', themeLight);\n\t\t\t\tconsole.log('localStorage Theme is: ' + themeLight);\n\t\t\t}\n\t\t}\n\t}\n\n\t// -- if DOM is ready, check if localStorage is filled and set body with it\n\tvar savedLocalStorageTheme = localStorage.getItem('theme');\n\tconsole.log(savedLocalStorageTheme);\n\tif(savedLocalStorageTheme !== null) {\n\t\tdocument.getElementsByTagName('body')[0].classList.remove(themeLight, themeDark);\n\t\tdocument.getElementsByTagName('body')[0].classList.add(savedLocalStorageTheme);\n\t\tif(savedLocalStorageTheme === themeLight) {\n\t\t\tdocument.getElementById('theme-switcher').checked = false;\n\t\t}\n\t\tif(savedLocalStorageTheme === themeDark) {\n\t\t\tdocument.getElementById('theme-switcher').checked = true;\n\t\t}\n\t}\n\n\n\t//sticky header (item to fix, item with padding to compensate fix)\n\tstickyElement('application-head','content');\n\n\t// theme switcher\n\tthemeSwitch('theme-switcher');\n});\n"]}