{"version":3,"sources":["script.js"],"names":["document","addEventListener","themeSwitch","elementId","switchingElement","getElementById","onclick","xmlhttp","XMLHttpRequest","this","checked","getElementsByTagName","classList","add","themeDark","remove","themeLight","open","send","xmlDoc","responseXML","localStorage","setItem","console","log","toggleElement","targetElementId","targetElement","contains","event","preventDefault","setJs","stickyElement","stickyId","compensateId","stickyHeight","clientHeight","scrollElement","style","marginTop","placeOverlay","overlayElement","top","savedLocalStorageTheme","getItem","opacity"],"mappings":"AACAA,SAASC,iBAAiB,mBAAoB,WAsB7C,QAASC,GAAYC,GACpBC,iBAAmBJ,SAASK,eAAeF,GAC3CC,iBAAiBE,QAAU,WAC1BC,QAAU,GAAIC,gBACVC,KAAKC,SACRV,SAASW,qBAAqB,QAAQ,GAAGC,UAAUC,IAAIC,GACvDd,SAASW,qBAAqB,QAAQ,GAAGC,UAAUG,OAAOC,GAC1DT,QAAQU,KAAK,MAAM,iCAAiCH,GAAU,GAC9DP,QAAQW,OACRC,OAASZ,QAAQa,YACjBC,aAAaC,QAAQ,QAASR,GAC9BS,QAAQC,IAAI,0BAA4BV,KAExCd,SAASW,qBAAqB,QAAQ,GAAGC,UAAUC,IAAIG,GACvDhB,SAASW,qBAAqB,QAAQ,GAAGC,UAAUG,OAAOD,GAC1DP,QAAQU,KAAK,MAAM,iCAAiCD,GAAW,GAC/DT,QAAQW,OACRG,aAAaC,QAAQ,QAASN,GAC9BO,QAAQC,IAAI,0BAA4BR,KAM3C,QAASS,GAActB,EAAUuB,GAChCD,EAAgBzB,SAASK,eAAeF,GACxCsB,EAAcnB,QAAU,WACvBqB,cAAgB3B,SAASK,eAAeqB,GACrCC,cAAcf,UAAUgB,SAAS,aACnCD,cAAcf,UAAUG,OAAO,aAE/BY,cAAcf,UAAUC,IAAI,aAG7BgB,MAAMC,kBAKR,QAASC,KACR/B,SAASW,qBAAqB,QAAQ,GAAGC,UAAUC,IAAI,MAIxD,QAASmB,GAAcC,EAASC,GAC/BF,EAAgBhC,SAASK,eAAe4B,GACxCD,EAAcpB,UAAUC,IAAI,UAC5BsB,aAAeH,EAAcI,aAAe,KAG5CC,cAAgBrC,SAASK,eAAe6B,GACxCG,cAAcC,MAAMC,UAAYJ,aAIjC,QAASK,GAAarC,GACrBsC,eAAiBzC,SAASK,eAAeF,GACzCsC,eAAeH,MAAMI,IAAMP,aA7E5B,GAAInB,GAAa,QACbF,EAAY,OAIZ6B,EAAyBtB,aAAauB,QAAQ,QAClDrB,SAAQC,IAAImB,GACkB,OAA3BA,IACF3C,SAASW,qBAAqB,QAAQ,GAAGC,UAAUG,OAAOC,EAAYF,GACtEd,SAASW,qBAAqB,QAAQ,GAAGC,UAAUC,IAAI8B,GACvD3C,SAASW,qBAAqB,QAAQ,GAAG2B,MAAMO,QAAU,IACtDF,IAA2B3B,IAC7BhB,SAASK,eAAe,kBAAkBK,SAAU,GAElDiC,IAA2B7B,IAC7Bd,SAASK,eAAe,kBAAkBK,SAAU,IAkEtDqB,IAGAC,EAAc,mBAAmB,WAGjC9B,EAAY,kBAGZuB,EAAc,iBAAkB,uBAGhCe,EAAa","file":"script.js","sourcesContent":["// is the DOM ready for manipulation?\ndocument.addEventListener('DOMContentLoaded', function() {\n\n\tvar themeLight = 'light';\n\tvar themeDark = 'dark';\n\n\n\t// -- if DOM is ready, check if localStorage is filled and set body with it. This is useful, if the site runs as app\n\tvar savedLocalStorageTheme = localStorage.getItem('theme');\n\tconsole.log(savedLocalStorageTheme);\n\tif(savedLocalStorageTheme !== null) {\n\t\tdocument.getElementsByTagName('body')[0].classList.remove(themeLight, themeDark);\n\t\tdocument.getElementsByTagName('body')[0].classList.add(savedLocalStorageTheme);\n\t\tdocument.getElementsByTagName('body')[0].style.opacity = \"1\";\n\t\tif(savedLocalStorageTheme === themeLight) {\n\t\t\tdocument.getElementById('theme-switcher').checked = false;\n\t\t}\n\t\tif(savedLocalStorageTheme === themeDark) {\n\t\t\tdocument.getElementById('theme-switcher').checked = true;\n\t\t}\n\t}\n\n\t// switch theme by adding and removing classes to body\n\tfunction themeSwitch(elementId) {\n\t\tswitchingElement = document.getElementById(elementId);\n\t\tswitchingElement.onclick = function() {\n\t\t\txmlhttp = new XMLHttpRequest();\n\t\t\tif (this.checked) {\n\t\t\t\tdocument.getElementsByTagName('body')[0].classList.add(themeDark);\n\t\t\t\tdocument.getElementsByTagName('body')[0].classList.remove(themeLight);\n\t\t\t\txmlhttp.open('GET','modules/themeswitch.php?theme='+themeDark,true);\n\t\t\t\txmlhttp.send();\n\t\t\t\txmlDoc = xmlhttp.responseXML;\n\t\t\t\tlocalStorage.setItem('theme', themeDark);\n\t\t\t\tconsole.log('localStorage Theme is: ' + themeDark);\n\t\t\t} else {\n\t\t\t\tdocument.getElementsByTagName('body')[0].classList.add(themeLight);\n\t\t\t\tdocument.getElementsByTagName('body')[0].classList.remove(themeDark);\n\t\t\t\txmlhttp.open('GET','modules/themeswitch.php?theme='+themeLight,true);\n\t\t\t\txmlhttp.send();\n\t\t\t\tlocalStorage.setItem('theme', themeLight);\n\t\t\t\tconsole.log('localStorage Theme is: ' + themeLight);\n\t\t\t}\n\t\t}\n\t}\n\n\t// toggle Element\n\tfunction toggleElement(elementId,targetElementId) {\n\t\ttoggleElement = document.getElementById(elementId);\n\t\ttoggleElement.onclick = function() {\n\t\t\ttargetElement = document.getElementById(targetElementId);\n\t\t\tif(targetElement.classList.contains('js-hidden')) {\n\t\t\t\ttargetElement.classList.remove('js-hidden');\n\t\t\t} else {\n\t\t\t\ttargetElement.classList.add('js-hidden');\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t// add JS to body-tag to allow CSS-Manipulation if JS is available\n\tfunction setJs() {\n\t\tdocument.getElementsByTagName('body')[0].classList.add('js');\n\t}\n\n\t// make element sticky (via position in css)\n\tfunction stickyElement(stickyId,compensateId) {\n\t\tstickyElement = document.getElementById(stickyId);\n\t\tstickyElement.classList.add('sticky');\n\t\tstickyHeight = stickyElement.clientHeight + 'px';\n\n\t\t//add Element-Height as margin-top to desired element\n\t\tscrollElement = document.getElementById(compensateId);\n\t\tscrollElement.style.marginTop = stickyHeight;\n\t}\n\n\t// place Element in relation to sticky element\n\tfunction placeOverlay(elementId) {\n\t\toverlayElement = document.getElementById(elementId);\n\t\toverlayElement.style.top = stickyHeight;\n\t}\n\n\t// set Js on body if JS is available\n\tsetJs();\n\n\t//sticky header (item to fix, item with margin to compensate fix)\n\tstickyElement('application-head','content');\n\n\t// theme switcher\n\tthemeSwitch('theme-switcher');\n\n\t// toggle Element (toggle, target)\n\ttoggleElement('toggle-overlay', 'application-overlay');\n\n\t// place overlay\n\tplaceOverlay('application-overlay');\n});\n"]}